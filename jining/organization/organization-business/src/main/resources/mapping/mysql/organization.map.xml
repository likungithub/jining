<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xinhai.organization.dao.OrganizationMapper">
    <resultMap id="orgaizationMap" type="com.xinhai.organization.api.Organization">
        <id property="bmid" column="bmid"/>
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="parentId" column="parent_id"/>
        <result property="independent" column="is_independent"/>
        <result property="orgType" column="org_type"/>
        <result property="path" column="path"/>
        <result property="remark" column="remark"/>
		<result property="orderNo" column="order_no"/>
		<result property="customerId" column="customer_id"/>
		<result property="isDelete" column="is_delete"/>
		<result property="mjcd" column="mjcd"/>
		<result property="nsrsbh" column="nsrsbh"/>
		<result property="dljgBm" column="dljg_bm"/>
		<result property="lrrq" column="lrrq"/>
		<result property="updateDate" column="update_date"/>
		<result property="scrq" column="scrq"/>
    </resultMap>
    <insert id="addOrg">
		INSERT INTO organization (
			id,
			bmid,
			customer_id,
			code,
			name,
			parent_id,
			parent_code,
			is_independent,
			org_type,
			path,
			remark,
			order_no,
			lrrq,
			is_delete,
			mjcd,
			nsrsbh,
			dljg_bm)
		VALUES
			(
				#{org.id},
				#{org.bmid},
				#{customerId},
				#{org.code},
				#{org.name},
				#{org.parentId},
				#{org.parent_code},
				#{org.independent},
				#{org.orgType},
				#{org.path},
				#{org.remark},
				#{org.orderNo},
				now(),
				0,
				0,
				#{org.nsrsbh},
				#{org.dljgBm});
	</insert>
    <insert id="setOrgAuth">
        INSERT INTO organization_auth (org_id, resource_id) VALUES
        <foreach collection="authIds" item="authId" index="index" separator=",">
            (#{id}, #{authId})
        </foreach>
    </insert>
    <!-- 根据bmdm删除组织结构 -->
    <update id="deleteOrg">
		UPDATE organization
		SET is_delete = TRUE
		WHERE code = #{id};
	</update>
   <update id="updateOrg">
		UPDATE organization
		SET
		<if test="org.name != null">
			name = #{org.name},
		</if>
		<if test="org.remark != null">
			remark = #{org.remark},
		</if>
		update_date = now()
		WHERE code = #{code}
	</update>
    <delete id="deleteOrgAuth">
		DELETE FROM organization_auth
		WHERE org_id = #{id};
	</delete>
	<!-- 根据bmdm更新用户信息 -->
	<update id="deleteOrgUser">
		UPDATE user SET bmdm = ''
		WHERE bmdm = #{id};
	</update>
	
	<!-- 获得代理机构下的全部部门信息 -->
    <select id="getOrgByCustomer" resultMap="orgaizationMap">
		SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
		FROM organization
		WHERE customer_id = #{customerId} AND is_delete = FALSE AND order_no &lt;&gt; 0
		ORDER BY order_no;
	</select>

	<!-- 根据组织机构id查询信息 -->
    <select id="getOrg" resultMap="orgaizationMap">
		SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
		FROM organization
		WHERE id = #{id} AND is_delete = FALSE;
	</select>
	
	<!-- 通过code查询出org表的数据 -->
	<select id="selectByCode" resultMap="orgaizationMap">
        SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
        FROM organization
        WHERE code = #{code} AND is_delete = FALSE;
    </select>
    
    <!-- 获得某部门下级中的最大的序号 -->
    <select id="getMaxOrder" resultType="java.lang.Integer">
		SELECT MAX(order_no) + 1
		FROM organization
		WHERE dljg_bm = #{dljgBm};
	</select>
	
	<!-- 部门权限 -->
    <select id="getOrgAuth" resultType="java.lang.String">
		SELECT resource_id
		FROM organization_auth
		WHERE org_id = #{id};
	</select>
	
	<!-- 无用 -->
    <select id="getIndependentOrgByAccount" resultMap="orgaizationMap">
		SELECT *
		FROM (
				 SELECT
					 org.*,
					 u.org_id
				 FROM user u
					 INNER JOIN organization org
						 ON u.customer_id = org.customer_id
				 WHERE u.user_account = #{userAccount}
			 ) a
		WHERE is_delete = 0 AND is_independent = 1 AND (SELECT path
														FROM organization
														WHERE id = a.org_id) LIKE concat(path, '%')
		ORDER BY length(path) DESC
		LIMIT 1
	</select>
	
	<!-- 无用 -->
    <select id="getIndependentOrgByUserId" resultMap="orgaizationMap">
		SELECT *
		FROM (
				 SELECT
					 org.*,
					 u.org_id
				 FROM user u
					 INNER JOIN organization org
						 ON u.customer_id = org.customer_id
				 WHERE u.id = #{userId}
			 ) a
		WHERE is_delete = 0 AND is_independent = 1 AND (SELECT path
														FROM organization
														WHERE id = a.org_id) LIKE concat(path, '%')
		ORDER BY length(path) DESC
		LIMIT 1
	</select>
	
	<!-- 无用 -->
    <select id="getOrgByIndependentOrg" resultMap="orgaizationMap">
		SELECT *
		FROM organization
		WHERE is_delete = FALSE
			  AND customer_id = #{customerId}
			  AND path LIKE concat((SELECT path
									FROM organization
									WHERE id = #{independentOrgId}), '%')
		ORDER BY order_no, update_date;
	</select>
	
	<!-- 检查组织结构是否存在 -->
    <select id="getOrgCount" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM organization
		WHERE name = #{name}
			  AND customer_id = #{customerId}
			  AND is_delete = FALSE;
	</select>
	
	<!-- 无用 -->
    <select id="getOrganization" resultMap="orgaizationMap">
		SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
		FROM organization
		WHERE is_delete = FALSE
			  AND org_type = #{orgType}
			  AND customer_id = #{customerId}
			  AND path LIKE concat((SELECT path
									FROM organization
									WHERE id = #{independentOrgId}), '%')
		ORDER BY order_no, update_date;
	</select>
	
	<!-- 无用 -->
	<select id="getDirectlyOrganization" resultMap="orgaizationMap">
		SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
		FROM organization
		WHERE is_delete = FALSE
			  AND org_type = #{orgType}
			  AND customer_id = #{customerId}
			  AND parent_id = (SELECT id
									FROM organization
									WHERE id = #{orgId})
		ORDER BY order_no, update_date;
	</select>
	
	<!-- 无用 -->
    <select id="getOrgType" resultType="com.xinhai.organization.api.OrganizationType">
		SELECT * FROM org_type;
	</select>
	
	<!-- 无用 -->
	<select id="getDirectlyIndependentOrgByOrgId" resultMap="orgaizationMap">
		SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
		FROM organization
		WHERE is_delete = 0 AND is_independent = 1 AND customer_id=#{customerId} AND (SELECT path
		FROM organization
		WHERE id = #{orgId}) LIKE concat(path, '|&amp;%')
		ORDER BY length(path) DESC
		LIMIT 1
	</select>
	
	<select id="findQXBMMC" resultType="string">
        select group_concat(name) from organization where code in
        <foreach item="id" collection="bmdms" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <select id="getParentList" resultType="string">
        select FuncGetParentList(#{bmdm});
    </select>
    
    <select id="getOrginCode" resultMap="orgaizationMap">
        SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
        FROM organization 
        where code in
        <foreach item="id" collection="bmdms" open="(" separator="," close=")">
            #{id}
        </foreach>
        and parent_code &lt;&gt; 0
    </select>
    
    <insert id="insertUerBmdm">
        INSERT INTO user_bmdm (zydm, bmdm) VALUES
        <foreach collection="bmdms" item="bmdm" index="index" separator=",">
            (#{zydm}, #{bmdm})
        </foreach>
    </insert>
    
    <select id="getUserFromBmqx" resultType="java.lang.String">
        select bmdm from user_bmdm where zydm=#{zydm};
    </select>
    
    <select id="getUserFromBmqxString" resultType="java.lang.String">
        select group_concat(bmdm) from user_bmdm where zydm=#{zydm};
    </select>
    
    <delete id="delUserBmdm">
        delete from user_bmdm where zydm=#{zydm};
    </delete>

	<select id="findByAgencyCodeAndDepartment" resultType="java.lang.Object">
		SELECT  name FROM organization where dljg_bm=#{agencyCode} and code=#{bmdm};
	</select>
	
	
	<select id="getOrganizationByUserId" resultMap="orgaizationMap">
	   SELECT o.id,o.code,o.name FROM organization o LEFT JOIN user u ON u.bmdm = o.code WHERE u.id = #{id};
	</select>
	<select id="getBMMC" resultMap="orgaizationMap">
		SELECT  name,code,id from organization where dljg_bm=#{dl} and is_delete=FALSE
	</select>
	
	<!-- 新增部门时使用 -->
	<select id="getMaxBmdm" resultType="string">
        select CONCAT_WS('_',left(max(code),char_length(max(code))-4),LPAD(right(max(code), 3)+1,3,0)) 
        from organization where DLJG_BM=#{agencyCode} and parent_code=#{bmdm};
    </select>
    
    <!-- 获得代理机构下的全部部门信息 -->
    <select id="getOrgByDljgBm" resultMap="orgaizationMap">
        SELECT id, bmid, customer_id, code, name, parent_id, parent_code, is_independent,
            org_type, path, remark, order_no, lrrq, is_delete, mjcd,
            nsrsbh, dljg_bm, update_date, scrq
        FROM organization
        WHERE dljg_bm = #{dljgBm} AND is_delete = FALSE
        ORDER BY order_no;
    </select>
    
    <!--查询具有该部门权限的职员代码-->
    <select id="getZydmFromBmqx" resultType="string">
        select zydm from user_bmdm where bmdm=#{bmdm};
    </select>
    
    <!--根据父节点的部门编码和代理机构编码查询该节点的子节点数目-->
    <select id="getSonNum" resultType="integer">
        select count(0) from organization where dljg_bm = #{dljgBm} AND parent_code=#{bmdm} and is_delete = FALSE;
    </select>
    
    <!--根据部门编码和代理机构编码查询该部门的员工数目-->
    <select id="getSomeNumUnderOrg" resultType="com.xinhai.organization.api.Nums">
        select count(a.id) as userNum from user a
        where a.dljg_bm = #{dljgBm} AND a.bmdm=#{bmdm} and a.is_delete = FALSE and a.if_manager = false;
    </select>
    
    <!--根据员工uuid查询出员工所在部门下是否存在子部门-->
    <select id="getBmNum" resultType="com.xinhai.organization.api.Nums">
        select count(a.id) as sonNum, bb.b as delNum from organization a,( <!-- 此处查出员工所在的部门是否被删除？ -->
		    select count(b.id) as b from organization b where b.is_delete = true and b.code in (
		        select distinct(u.bmdm) from user u where u.dljg_bm  = #{dljgBm} and u.id in
		        <foreach item="id" collection="ids" open="(" separator="," close=")">
	                #{id}
	            </foreach>
		        ) 
		    )bb  where a.dljg_bm = #{dljgBm} and a.is_delete = false and a.parent_code in ( <!-- 此处查出员工所在的部门是否成为父节点？ -->
		    select distinct(c.bmdm) from user c where c.dljg_bm  = #{dljgBm} and c.id in
		    <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
		)
    </select>
    
    <!-- 批量更新部门名称 -->
    <select id="changName" statementType="CALLABLE" parameterType="java.lang.String">
        <![CDATA[
            call P_updateBMMC(
                #{bmdm,mode=IN},#{bmmc,mode=IN}
            )
        ]]>
    </select>
	<!-- 查询为删除部门的名称 -->
	<select id="getgetBMMCBydl" resultMap="orgaizationMap">
		select name,code FROM organization where is_delete=FALSE and dljg_bm=#{dl};
	</select>

	<select id="findByAgencyCodeAndName" resultMap="orgaizationMap">
		select code from organization where is_delete=FALSE and  dljg_bm=#{dl} and name=#{str};
	</select>

	<!-- 查询某部门下的所有一级子部门-->
	<select id="findNextBmdm" resultType="java.util.HashMap">
			SELECT GROUP_CONCAT(a.name) name, GROUP_CONCAT(a.code) code FROM(
			select code,NAME from organization where is_delete=FALSE and  dljg_bm=#{dljgBm} and parent_code=#{bmdm}
			UNION
			SELECT code,'管理员' name FROM organization o WHERE is_delete=FALSE AND o.code = #{bmdm}
			ORDER BY code
		) a
	</select>

	<select id="getSons" parameterType="java.lang.String" resultType="com.xinhai.organization.api.Organization">
		select code,name from organization WHERE code like #{bmdm}and is_delete = false;
	</select>

	<select id="getBmStr" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT GROUP_CONCAT(code SEPARATOR ',') FROM organization WHERE dljg_bm = #{dljgBm};
	</select>
</mapper>